import { z } from 'zod';
export declare const weaponObject: z.ZodObject<{
    id: z.ZodOptional<z.ZodNumber>;
    name: z.ZodOptional<z.ZodString>;
    cost: z.ZodOptional<z.ZodString>;
    weight: z.ZodOptional<z.ZodString>;
    damageType: z.ZodOptional<z.ZodString>;
    special: z.ZodOptional<z.ZodString>;
    dice: z.ZodOptional<z.ZodString>;
    sides: z.ZodOptional<z.ZodString>;
    diceV: z.ZodOptional<z.ZodString>;
    sidesV: z.ZodOptional<z.ZodString>;
    range: z.ZodOptional<z.ZodString>;
    rangeMax: z.ZodOptional<z.ZodString>;
    reach: z.ZodOptional<z.ZodString>;
    targets: z.ZodOptional<z.ZodString>;
    properties: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
}, "strip", z.ZodTypeAny, {
    id?: number | undefined;
    name?: string | undefined;
    cost?: string | undefined;
    weight?: string | undefined;
    damageType?: string | undefined;
    special?: string | undefined;
    dice?: string | undefined;
    sides?: string | undefined;
    diceV?: string | undefined;
    sidesV?: string | undefined;
    range?: string | undefined;
    rangeMax?: string | undefined;
    reach?: string | undefined;
    targets?: string | undefined;
    properties?: string[] | undefined;
}, {
    id?: number | undefined;
    name?: string | undefined;
    cost?: string | undefined;
    weight?: string | undefined;
    damageType?: string | undefined;
    special?: string | undefined;
    dice?: string | undefined;
    sides?: string | undefined;
    diceV?: string | undefined;
    sidesV?: string | undefined;
    range?: string | undefined;
    rangeMax?: string | undefined;
    reach?: string | undefined;
    targets?: string | undefined;
    properties?: string[] | undefined;
}>;
//# sourceMappingURL=weapons.d.ts.map